<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/" debug="true">
	 <!-- ========================== 自定义输出格式说明================================ -->     
    <!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->     
    <!-- %r 输出自应用启动到输出该log信息耗费的毫秒数  -->     
    <!-- %c 输出所属的类目，通常就是所在类的全名 -->     
    <!-- %t 输出产生该日志事件的线程名 -->     
    <!-- %n 输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n” -->     
    <!-- %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  -->     
    <!-- %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)  -->     
    <!-- ========================================================================== -->     
         
    <!-- ========================== 输出方式说明================================ -->     
    <!-- Log4j提供的appender有以下几种:  -->     
    <!-- org.apache.log4j.ConsoleAppender(控制台),  -->     
    <!-- org.apache.log4j.FileAppender(文件),  -->     
    <!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->     
    <!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件),  -->     
    <!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)   -->     
<!-- ========================================================================== -->   
	<appender name="CONSOLE" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yy/MM/dd hh:mm:ss:SSS}] %5p %c{2}: %m%n" />
		</layout>
	</appender>
	<!-- 系统应用级别日志 -->
    <appender name="SYSTEMLOG" class="org.apache.log4j.RollingFileAppender">
    	<!--指定日志消息的输出最低层次-->
        <param name="threshold" value="error" />
        <!-- 设置File参数：日志输出文件名 -->
        <param name="file" value="logs/ipav.log" />
      	<!-- 设置文件大小 -->  
        <param name="maxFileSize" value="2" />
        <!-- 设置文件备份个数，当log文件的大小超过上面文件设置的大小时，就会进行备份。当设置的文件备份个数用完后，它会自动覆盖原有的log -->  
        <param name="maxBackupIndex" value="5" />
        <!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->  
        <param name="append" value="true" />
        <!-- 设置输出文件项目和格式 -->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%-5p][%d{yyyy-MM-dd HH:mm:ss,SSS}][%c] :%m%n" />
        </layout>
    </appender>
    
    <!-- 输出到日志文件 每天一个日志      
    <appender name="FILELOG_DAILY" class="org.apache.log4j.DailyRollingFileAppender">        
        <param name="File" value="log/daily.log" />        
        <param name="DatePattern" value="'logs/daily-'yyyy-MM-dd'.log'" />        
        <layout class="org.apache.log4j.PatternLayout">        
            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss/} %-5p] [%t] (%c:%L) - %m%n" />        
        </layout>        
    </appender> --> 
	<logger name="jdbc.sqltiming">
		<level value="ERROR" />     
	</logger>
	<logger name="jdbc.connection">         
		<level value="INFO" />     
	</logger>
	<logger name="jdbc.resultset">
		<level value="ERROR"/>
	</logger>
	<logger name="jdbc.audit">
		<level value="ERROR"/>
	</logger>
	<logger name="jdbc.sqlonly">
		<level value="ERROR"/>
	</logger>
	<logger name="jdbc.resultsettable" additivity="false"> 
		<level value="ERROR" /> 
		<appender-ref ref="CONSOLE" /> 
	</logger>
	
  	<root>
		<level value="INFO" />
		<appender-ref ref="CONSOLE" />
	</root>
</log4j:configuration>